name: TOS Check

on:
  issues:
    types:
      - opened
      - reopened
      - edited
  issue_comment:
    types:
      - created
      - edited

env:
  GH_TOKEN: ${{ github.token }}
  GH_REPO: ${{ github.repository }}

jobs:
  parse-issue:
    if: github.event.issue.state == 'open'
    name: Ensure Terms of Service are accepted
    runs-on: ubuntu-latest
    outputs:
      accepted: ${{ steps.set-output.outputs.accepted }}
    steps:
      - name: Run /validate command
        if: github.event_name == 'issue_comment'
        run: |
          command=$(echo "${{ github.event.comment.body }}" | head -1)
          if [[ $command != "/validate"* ]]; then
            echo "No /validate command found in first line of the comment \"${command}\", skipping" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Parse issue body
        id: parse
        uses: zentered/issue-forms-body-parser@v1.5.1

      - name: Find TOS checkbox state
        id: set-output
        run: |
          accepted=$(echo ${{ toJSON(steps.parse.outputs.data) }} | jq -r '.["terms-of-services"].list[0].checked')
          echo "accepted=$accepted" >> $GITHUB_OUTPUT

      - name: Validate tos
        if: steps.set-output.outputs.accepted == 'null'
        run: |
          # Check if $GITHUB_STEP_SUMMARY exist to avoid the following lines to error when running with act
          if [[ -w "$GITHUB_STEP_SUMMARY" ]]; then
            echo "No checkbox for the tos found in the body of the issue ${{ inputs.issue_number }}" >> $GITHUB_STEP_SUMMARY
            echo "Is the \"terms-of-services\" field present?" >> $GITHUB_STEP_SUMMARY
            echo ${{ steps.parse.outputs.data }} >> $GITHUB_STEP_SUMMARY
          fi
          exit 1

  tos-not-accepted:
    runs-on: ubuntu-latest
    needs: [ parse-issue ]
    if: needs.parse-issue.outputs.accepted == 'false'
    steps:
      - uses: actions/checkout@v3

      - name: Render template
        id: render
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-not-accepted.md
          vars: |
            user: ${{ github.event.issue.user.login}}

      - name: Add comment
        if: env.ACT == false
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.render.outputs.result }}

      - name: Remove 'tos/accepted' label
        if: env.ACT == false && contains(github.event.issue.labels.*.name, 'tos/accepted')
        run: gh issue edit ${{ github.event.issue.number }} --remove-label tos/accepted

      - name: Add 'tos/not-accepted' label
        if: env.ACT == false && !contains(github.event.issue.labels.*.name, 'tos/not-accepted')
        run: gh issue edit ${{ github.event.issue.number }} --add-label tos/not-accepted

  tos-accepted:
    runs-on: ubuntu-latest
    needs: [ parse-issue ]
    if: needs.parse-issue.outputs.accepted == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Render template
        id: render
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-accepted.md
          vars: |
            user: ${{ github.event.issue.user.login}}

      - name: Add comment
        if: env.ACT == false
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.render.outputs.result }}

      - name: Remove 'tos/not-accepted' label
        if: env.ACT == false && contains(github.event.issue.labels.*.name, 'tos/not-accepted')
        run: gh issue edit ${{ github.event.issue.number }} --remove-label tos/not-accepted

      - name: Add 'tos/accepted' label
        if: env.ACT == false && !contains(github.event.issue.labels.*.name, 'tos/accepted')
        run: gh issue edit ${{ github.event.issue.number }} --add-label tos/accepted

  tos-not-found:
    runs-on: ubuntu-latest
    needs: [ parse-issue ]
    if: failure() && needs.parse-issue.outputs.accepted == 'null'
    steps:
      - uses: actions/checkout@v3

      - name: Render template when tos are not found
        id: render
        uses: chuhlomin/render-template@v1.6
        with:
          template: .github/workflows/templates/tos-not-found.md

      - name: Add comment if tos not found
        if: env.ACT == false
        uses: peter-evans/create-or-update-comment@v2
        with:
          edit-mode: replace
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.render.outputs.result }}

      - name: Mark job as failed
        run: exit 1

  debug:
    runs-on: ubuntu-latest
    needs: [ parse-issue ]
    steps:
      - run: echo ${{ toJSON(github.event.issue) }}

  validate:
    concurrency:
      group: submission-${{ github.event.issue.number || 'wtf-there-is-no-issue-number' }}
      cancel-in-progress: true
    name: Extension validation
    needs: parse-issue
    if: needs.parse-issue.outputs.accepted == 'true'
    uses: ./.github/workflows/validation.yaml
